#!/bin/python3

from bs4 import BeautifulSoup, Comment
from urllib.request import Request, urlopen
import re
import sys

index = 0
i = 1
################################################################################
# Argument test
################################################################################
if len(sys.argv) == 1:
    print("Usage:", sys.argv[0], "[-u website address] OPTIONS:  [-w word] [-s savefile] ")
    print("Type", sys.argv[0], "--help for more information")
    sys.exit()
else:
    n = len(sys.argv)
################################################################################

def help():
    print(r"""
                        ___                   _
/ / /\ \ \___| |__     / __\ __ __ ___      _| | ___ _ __
\ \/  \/ / _ \ '_ \   / / | '__/ _` \ \ /\ / / |/ _ \ '__|
 \  /\  /  __/ |_) | / /__| | | (_| |\ V  V /| |  __/ |
  \/  \/ \___|_.__/  \____/_|  \__,_| \_/\_/ |_|\___|_|  v0.1


""")
    print("Usage:", sys.argv[0], "[-u website address] OPTIONS:  [-w word] [-s savefile] \n")

    print("-u           website address, format http://www.example.com ")
    print("-w           specific word to find, default web links")
    print("-s           save results to a file")
    sys.exit()



#req = sys.argv[1]
links = []
text = []



################################################################################
# Links finder
################################################################################

def links_finder(req,c,l,word):
    i = 0
    index = 0
    html_page = urlopen(req)
    html_doc = html_page.read()
    html_page.close()
    soup = BeautifulSoup(html_doc, "html.parser")

    if l:
        for link in soup.findAll('a'):
            links.append(link.get("href"))
            if (links[index] == "#" or links[index] == ''):
                links[index] = ""
            index += 1

        while("" in links):
            links.remove("")

        total = len(links) - 1

        print(l)

        print(r"""

            LINKS:

            """)

        while total > i:
            if (links[i][0] == "h" or links[i][0] == "w"):
                print(links[i])
            i += 1

    if c:
        comments(soup)
    else:
        sys.exit()

################################################################################
# word/pattern finder
################################################################################
def pattern_finder(addr,c,l,word):
    i = 0
    index = 0
    html_page = urlopen(addr)
    html_doc = html_page.read()
    html_page.close()
    soup = BeautifulSoup(html_doc, 'html.parser')
    soup_str = str(soup)

    f = open("report.txt","w+")
    f.write(soup_str+'/n')
    f.close()
    f = open("report.txt", "r")
    content = f.read()
    list = content.split()

    while(" " in list):
        list.remove("")

    for n in list:          #check number of lines
        if n:
            i += 1
    #print(list[678])

    print(r"""

            Pattern:

    """)
    while i>index:
        find = re.findall(word,list[index])
        if find:
            print(list[index], "at index: ", index)
        index += 1

    f.close()

    if l:
        links_finder(addr,c,l,word)
    elif c:
        comments(soup)
    else:
        sys.exit()


################################################################################
# comment finder <!--
################################################################################
def comments(soup):

    print(r"""

            Comments:

    """)
    for comments in soup.findAll(text=lambda text:isinstance(text, Comment)):
        print(comments)
        comments.extract()

################################################################################
def selection(ar):
    i = 1
    l = False
    c = False
    word = "a"

    while ar > i:
        if (sys.argv[i] == "-u"):
            addr = sys.argv[i+1]
        elif (sys.argv[i] == "-w"):
            word = sys.argv[i+1]
        elif (sys.argv[i] == "-s"):
            savefile = sys.argv[i+1]
        elif (sys.argv[i] == "-c"):
            c = True
        elif (sys.argv[i] == "-l"):
            l = True
        i += 1

    if (word == "a"):
        links_finder(addr,c,l,word)
    else:
        pattern_finder(addr,c,l,word)
################################################################################

for flags in sys.argv:
    if (sys.argv[i] == "--help"):
        help()

selection(n)
